apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Name }}
spec:
  replicas: {{ .Values.nginxProxyManager.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.nginxProxyManager.image }}"
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 81
          env:
            - name: SSL_ACTIVE
              value: "{{ .Values.nginxProxyManager.env.SSL_ACTIVE }}"
            - name: LETSENCRYPT_DOMAIN
              value: "{{ .Values.nginxProxyManager.env.LETSENCRYPT_DOMAIN }}"
            - name: LETSENCRYPT_EMAIL
              value: "{{ .Values.nginxProxyManager.env.LETSENCRYPT_EMAIL }}"
            - name: DISABLE_IPV6
              value: "true"
          volumeMounts:
            - name: {{ .Release.Name }}-storage
              mountPath: /etc/letsencrypt
            - name: {{ .Release.Name }}-storage
              mountPath: /data
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "echo \"Install some stuff\" && apt-get update && apt-get upgrade -y && python3 -m pip install --upgrade pip && apt-get install -y --only-upgrade certbot && apt-get install nano && apt-get install -y python3-certbot-dns-cloudflare && pip install --upgrade certbot && pip install cloudflare"]
      volumes:
        - name: {{ .Release.Name }}-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc