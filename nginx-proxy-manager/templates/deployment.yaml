apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Name }}
spec:
  replicas: {{ .Values.nginxProxyManager.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      initContainers:
        - name: copy-nginx-conf
          image: busybox
          command: ['sh', '-c', 'cp -r /etc/nginx/conf.d /mnt/nginx-conf/ && chown -R nginx:nginx /mnt/nginx-conf/']
          volumeMounts:
          - name: nginx-conf
            mountPath: /mnt/nginx-conf
          - name: etc-nginx
            mountPath: /etc/nginx/conf.d
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.nginxProxyManager.image }}"
          ports:
            - containerPort: {{ .Values.nginxProxyManager.service.ports.http }}
            - containerPort: {{ .Values.nginxProxyManager.service.ports.https }}
            - containerPort: {{ .Values.nginxProxyManager.service.ports.management }}
          volumeMounts:
            - name: letsencrypt-storage
              mountPath: /etc/letsencrypt
            - name: letsencrypt-storage
              mountPath: /etc/nginx/conf.d
            - name: {{ .Release.Name }}-storage
              mountPath: /data
      volumes:
        - name: letsencrypt-storage
          persistentVolumeClaim:
            claimName: letsencrypt-pvc
        - name: {{ .Release.Name }}-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc