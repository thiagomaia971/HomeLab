apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-configmap
  namespace: {{ .Release.Name }}
data:
  default.conf: |
    # "You are not configured" page, which is the default if another default doesn't exist
    server {
            listen 80;
            listen [::]:80;

            set $forward_scheme "http";
            set $server "127.0.0.1";
            set $port "80";

            server_name localhost-nginx-proxy-manager;
            access_log /data/logs/fallback_access.log standard;
            error_log /data/logs/fallback_error.log warn;
            include conf.d/include/assets.conf;
            include conf.d/include/block-exploits.conf;
            include conf.d/include/letsencrypt-acme-challenge.conf;

            location / {
                    index index.html;
                    root /var/www/html;
            }
    }

    # First 443 Host, which is the default if another default doesn't exist
    server {
            listen 443 ssl;
            listen [::]:443 ssl;

            set $forward_scheme "https";
            set $server "127.0.0.1";
            set $port "443";

            server_name localhost;
            access_log /data/logs/fallback_access.log standard;
            error_log /dev/null crit;
            include conf.d/include/ssl-ciphers.conf;
            ssl_reject_handshake off;

            return 444;
    }
#     server {
#       listen 443 ssl;
#       server_name 192.168.68.136;  # O IP do seu servidor

#       ssl_certificate /etc/nginx/ssl/nginx.crt;
#       ssl_certificate_key /etc/nginx/ssl/nginx.key;

#       # Configurações adicionais de SSL
#       ssl_protocols TLSv1.2 TLSv1.3;
#       ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256';
#       ssl_prefer_server_ciphers on;

#       # Configurações adicionais do servidor
#       location / {
#           proxy_pass http://localhost:80;
#           proxy_set_header Host $host;
#           proxy_set_header X-Real-IP $remote_addr;
#           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#           proxy_set_header X-Forwarded-Proto $scheme;
#       }
#   }

# #   server {
# #       listen 80;
# #       server_name 192.168.68.136;

# #       location / {
# #           return 301 https://$host$request_uri;
# #       }
# #   }

